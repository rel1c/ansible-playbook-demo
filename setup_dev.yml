- name: Ansible Demo
  hosts: localhost
  connection: local

  tasks:
    - name: Update package repository
      become: yes
      apt:
        update_cache: yes
      register: apt_update
      retries: 3
      until: apt_update is success
      
    - name: Install core packages
      become: yes
      apt:
        pkg: "{{ item }}"
      loop:
        - ansible
        - black
        - build-essential
        - ca-certificates
        - curl
        - gcc
        - git
        - jq
        - net-tools
        - vim
        - wget

    - name: Install Homebrew
      shell:
        cmd: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        creates: /home/linuxbrew/.linuxbrew/bin/brew
      environment:
        NONINTERACTIVE: "1"

    - name: Update bashrc for Homebrew
      shell:
        cmd: |
          if ! grep linuxbrew $HOME/.bashrc; then
            echo >> $HOME/.bashrc
            echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> $HOME/.bashrc
            eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          fi

    - name: Install pyenv with brew
      shell:
        cmd: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew install pyenv
        creates: /home/linuxbrew/.linuxbrew/bin/pyenv
      environment:
        HOMEBREW_NO_ENV_HINTS: "1"

    - name: Add pyenv to shell
      shell:
        cmd: |
          if ! grep PYENV_ROOT $HOME/.bashrc; then
            echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
            echo '[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
            echo 'eval "$(pyenv init -)"' >> ~/.bashrc
            pyenv init || true
          fi

    - name: Install Python 2.7.18 with pyenv
      shell:
        cmd: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          pyenv install 2.7.18
        creates: $HOME/.pyenv/versions/2.7.18/bin/python2.7

    - name: Add Python 2.7.18 to PATH
      shell:
        cmd: |
          if [[ $(echo $PATH) != *"$HOME/pyenv/shims"* ]]; then
            export PATH="$(pyenv root)/shims:${PATH}"
            echo 'PATH=$(pyenv root)/shims:$PATH' >> ~/.bashrc
          fi

    - name: Add Python 2.7.18 to shell #TODO
      shell:
        cmd: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          pyenv local 2.7.18

    - name: Install python developer packages
      shell:
        cmd: |
          export PATH="$HOME/.pyenv/versions/2.7.18/bin/:${PATH}"
          pip install ipython
          pip install pytest
          pip install pylint
          pip install virtualenv

    - name: Add Docker GPG key
      become: yes
      shell:
        cmd: |
          install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          chmod a+r /etc/apt/keyrings/docker.asc
        creates: /etc/apt/keyrings/docker.asc

    - name: Add Docker repository to Apt sources
      become: yes
      shell:
        cmd: |
          echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
          tee /etc/apt/sources.list.d/docker.list > /dev/null
        creates: /etc/apt/sources.list.d/docker.list

    - name: Update package repository
      become: yes
      apt:
        update_cache: yes
      register: apt_update
      retries: 3
      until: apt_update is success

    - name: Download Docker Desktop package
      become: yes
      get_url:
        url: https://desktop.docker.com/linux/main/amd64/173168/docker-desktop-amd64.deb
        dest: /root/
        checksum: sha256:df758b886b69ae4ff69622825effbbad428baefee8ee2ef2365a14c6d3abd8b2

    - name: Install Docker Desktop
      become: yes
      apt:
        deb: $HOME/docker-desktop-amd64.deb
